apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

def excludedDirs = [
        '**/R.class',
        '**/R$*.class',
        '**/BuildConfig.*',
        '**/*$Lambda$*.*',
        '**/*Module.*',
        '**/*Dagger*.*',
        '**/*MembersInjector*.*',
        '**/*_Provide*Factory*.*',
        '**/Manifest*.*',
        '**/*Activity*.*',
        '**/*Dialog.*',
        '**/*Fragment*.*',
        '**/*ViewHolder*.*',
        '**/*Adapter*.*',
        '**/*zxing**',
        '**/*customviews**',
        '**/*databinding**',
        '**/injection**',
        '**/directory**',
        '**/adapter**',
        '**/models**',
        '**/extensions**',
        '**/*$ViewInjector*.*',
        '**/*$ViewBinder*.*',
        '**/*_Factory.*',
        '**/*$*$*.*' // Anonymous classes generated by kotlin
]

def coverageSourceDirs = [
        'app/src/main/java',
        'buysell/src/main/java',
        'buysellui/src/main/java',
        'coreui/src/main/java',
        'core/src/main/java',
        'wallet/src/main/java'
]

def coverageClassDirectories = [
        fileTree(dir: 'app/build/intermediates/classes/envProdDebug', excludes: excludedDirs),
        fileTree(dir: 'app/build/tmp/kotlin-classes/envProdDebug', excludes: excludedDirs),
        fileTree(dir: 'buysell/build/intermediates/classes/debug', excludes: excludedDirs),
        fileTree(dir: 'buysell/build/tmp/kotlin-classes/debug', excludes: excludedDirs),
        fileTree(dir: 'buysellui/build/intermediates/classes/debug', excludes: excludedDirs),
        fileTree(dir: 'buysellui/build/tmp/kotlin-classes/debug', excludes: excludedDirs),
        fileTree(dir: 'coreui/build/intermediates/classes/debug', excludes: excludedDirs),
        fileTree(dir: 'coreui/build/tmp/kotlin-classes/debug', excludes: excludedDirs),
        fileTree(dir: 'core/build/intermediates/classes/debug', excludes: excludedDirs),
        fileTree(dir: 'core/build/tmp/kotlin-classes/debug', excludes: excludedDirs),
        fileTree(dir: 'wallet/build/classes/java/main', excludes: excludedDirs),
        fileTree(dir: 'wallet/build/classes/kotlin/main', excludes: excludedDirs),
]

task jacocoRootReport(type: JacocoReport) {
    dependsOn "wallet:testCoverage"
    dependsOn "core:testCoverage"
    dependsOn "coreui:testCoverage"
    dependsOn "buysell:testCoverage"
    dependsOn "buysellui:testCoverage"
    dependsOn "app:testCoverage"

    group = "Reporting"
    description = "Generate Jacoco coverage reports on the Debug build."

    classDirectories = files(coverageClassDirectories)
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)

    executionData = files(
            tasks.getByPath("wallet:testCoverage").executionData,
            tasks.getByPath("core:testCoverage").executionData,
            tasks.getByPath("coreui:testCoverage").executionData,
            tasks.getByPath("buysell:testCoverage").executionData,
            tasks.getByPath("buysellui:testCoverage").executionData,
            tasks.getByPath("app:testCoverage").executionData
    )

    reports {
        xml.enabled = true
        html.enabled = true
    }

    onlyIf = { true }

    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
    sourceDirs = files(coverageSourceDirs).toList()
}

tasks.coveralls {
    dependsOn 'jacocoRootReport'
}